apiVersion: apps/v1
kind: Deployment
metadata:
  name: codai
  namespace: production
  labels:
    app: codai
    tier: core
    version: v1.0.0
spec:
  replicas: 5
  selector:
    matchLabels:
      app: codai
  template:
    metadata:
      labels:
        app: codai
        tier: core
    spec:
      containers:
      - name: codai
        image: codai:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: codai-secrets
              key: database-url
        - name: MEMORAI_URL
          value: "http://memorai-service"
        - name: LOGAI_URL
          value: "http://logai-service"
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: codai-secrets
              key: nextauth-secret
        resources:
          requests:
            memory: "1Gi"
            cpu: "750m"
          limits:
            memory: "2Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: codai-service
  namespace: production
  labels:
    app: codai
spec:
  selector:
    app: codai
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: codai-secrets
  namespace: production
type: Opaque
data:
  database-url: # Base64 encoded database URL
  nextauth-secret: # Base64 encoded NextAuth secret
  openai-api-key: # Base64 encoded OpenAI API key
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codai-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - codai.com
    - www.codai.com
    secretName: codai-tls
  rules:
  - host: codai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codai-service
            port:
              number: 80
  - host: www.codai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codai-service
            port:
              number: 80
